"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[1434],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>_});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=d(n),_=r,u=m["".concat(o,".").concat(_)]||m[_]||s[_]||l;return n?a.createElement(u,i(i({ref:t},c),{},{components:n})):a.createElement(u,i({ref:t},c))}));function _(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1007:(e,t,n)=>{n.d(t,{Z:()=>_});var a=n(7294),r=n(6010);const l="browserWindow_my1Q",i="browserWindowHeader_jXSR",p="buttons_uHc7",o="browserWindowAddressBar_Pd8y",d="dot_giz1",c="browserWindowMenuIcon_Vhuh",s="bar_rrRL",m="browserWindowBody_Idgs";function _(e){let{children:t,minHeight:n,url:_="http://localhost:3000"}=e;return a.createElement("div",{className:l,style:{minHeight:n}},a.createElement("div",{className:i},a.createElement("div",{className:p},a.createElement("span",{className:d,style:{background:"#f25f58"}}),a.createElement("span",{className:d,style:{background:"#fbbe3c"}}),a.createElement("span",{className:d,style:{background:"#58cb42"}})),a.createElement("div",{className:(0,r.Z)(o,"text--truncate")},_),a.createElement("div",{className:c},a.createElement("div",null,a.createElement("span",{className:s}),a.createElement("span",{className:s}),a.createElement("span",{className:s})))),a.createElement("div",{className:m},t))}},2232:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294);const r="codeDescription_fg9D",l="codeDescriptionBody_Gp1s";function i(e){let{children:t,minHeight:n}=e;return a.createElement("div",{className:r,style:{minHeight:n}},a.createElement("div",{className:l},t))}},3691:(e,t,n)=>{n.d(t,{L:()=>r,W:()=>l});var a=n(7294);function r(e){let{children:t}=e;return a.createElement("span",{style:{backgroundColor:"#9747FF",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}function l(e){let{children:t}=e;return a.createElement("span",{style:{backgroundColor:"#6A77D7",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}},5345:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294);const r="PreviewDescription_enzD",l="PreviewDescriptionBody_t2U9";function i(e){let{children:t,minHeight:n}=e;return a.createElement("div",{className:r,style:{minHeight:n}},a.createElement("div",{className:l},t))}},8245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var a=n(7462),r=(n(7294),n(3905)),l=(n(2232),n(5345)),i=n(1007),p=n(3691);const o={sidebar_position:2,description:"\ud83d\udccc \uc5ec\ub7ec \uac1c\uc758 \ubaa8\ub378\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc791\uc131\ud569\ub2c8\ub2e4."},d="2) Model Pipeline",c={unversionedId:"model-development/base-model-pipeline",id:"model-development/base-model-pipeline",title:"2) Model Pipeline",description:"\ud83d\udccc \uc5ec\ub7ec \uac1c\uc758 \ubaa8\ub378\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc791\uc131\ud569\ub2c8\ub2e4.",source:"@site/docs/model-development/base-model-pipeline.mdx",sourceDirName:"model-development",slug:"/model-development/base-model-pipeline",permalink:"/tutorial/docs/model-development/base-model-pipeline",draft:!1,editUrl:"https://github.com/mlops-for-mle/tutorial/tree/main/docs/model-development/base-model-pipeline.mdx",tags:[],version:"current",lastUpdatedBy:"Seokgi Kim",lastUpdatedAt:1685372692,formattedLastUpdatedAt:"May 29, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"\ud83d\udccc \uc5ec\ub7ec \uac1c\uc758 \ubaa8\ub378\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc791\uc131\ud569\ub2c8\ub2e4."},sidebar:"tutorialSidebar",previous:{title:"1) Base Model Development",permalink:"/tutorial/docs/model-development/base-model-development"},next:{title:"3) Load Data from Database",permalink:"/tutorial/docs/model-development/load-data-from-database"}},s={},m=[{value:"Chapter Preview",id:"chapter-preview",level:2},{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:3},{value:"\uc2a4\ud399 \uba85\uc138\uc11c",id:"\uc2a4\ud399-\uba85\uc138\uc11c",level:3},{value:"1. Model Pipeline",id:"1-model-pipeline",level:2},{value:"1.1 Scaler &amp; SVC",id:"11-scaler--svc",level:3},{value:"1.2 Code",id:"12-code",level:3},{value:"1.3 <code>pipeline_train.py</code>",id:"13-pipeline_trainpy",level:3},{value:"2. <code>pipeline_validate_save_model.py</code>",id:"2-pipeline_validate_save_modelpy",level:2}],_={toc:m};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"2-model-pipeline"},"2) Model Pipeline"),(0,r.kt)(l.Z,{mdxType:"PreviewDescription"},(0,r.kt)("h2",{id:"chapter-preview"},"Chapter Preview"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\uc5ec\ub7ec \uac1c\uc758 \ubaa8\ub378\ub4e4\uc744 \ud558\ub098\uc758 \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc791\uc131\ud569\ub2c8\ub2e4.")),(0,r.kt)("h3",{id:"\uc2a4\ud399-\uba85\uc138\uc11c"},"\uc2a4\ud399 \uba85\uc138\uc11c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\ubaa8\ub378\ub4e4\uc758 \ud30c\uc774\ud504\ub77c\uc778\ud654",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scikit-learn")," \uc5d0 \uc788\ub294 pipeline \uc744 \uc774\uc6a9\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ol"},"\uc800\uc7a5\ub41c \ud30c\uc774\ud504\ub77c\uc778 \uac80\uc99d",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\uc800\uc7a5\ub41c \ud30c\uc774\ud504\ub77c\uc778\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4."))))),(0,r.kt)(i.Z,{url:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part2",mdxType:"BrowserWindow"},(0,r.kt)("p",null,"\ud574\ub2f9 \ud30c\ud2b8\uc758 \uc804\uccb4 \ucf54\ub4dc\ub294 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part2"},"mlops-for-mle/part2/")," \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"part2\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 base_train.py\n\u251c\u2500\u2500 base_validate_save_model.py\n\u251c\u2500\u2500 db_train.py\n\u251c\u2500\u2500 db_validate_save_model.py\n// highlight-next-line\n\u251c\u2500\u2500 pipeline_train.py\n// highlight-next-line\n\u2514\u2500\u2500 pipeline_validate_save_model.py\n"))),(0,r.kt)("h2",{id:"1-model-pipeline"},"1. Model Pipeline"),(0,r.kt)("h3",{id:"11-scaler--svc"},"1.1 Scaler & SVC"),(0,r.kt)(p.W,{mdxType:"Chapter"},"1) Base Model Development")," \ucc55\ud130\uc5d0\uc11c \uc608\uce21\uc744 \uc704\ud574 \uc0ac\uc6a9\ud55c \ubaa8\ub378\uc740 scaler \uc640 SVC \ub450 \uac00\uc9c0\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \ub610\ud55c SVC \uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc608\uce21\ud558\uae30 \uc704\ud574\uc11c\ub294 scaler \uac00 \ud544\uc694\ud558\ub2e4\ub294 \uac83\ub3c4 \uc54c\uc544 \ubcf4\uc558\uc2b5\ub2c8\ub2e4. \uc989 SVC \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"scaled_X_train = scaler.transform(X_train)\ntrain_pred = classifier.predict(scaled_X_train)\n")),(0,r.kt)("p",null,"\ud558\uc9c0\ub9cc \uc704 \ubc29\ubc95\uc740 scaler \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uac70\ub098 \ub2e4\ub978 scaler \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7ec\ud55c \uc2e4\uc218\ub97c \ub9c9\uc744 \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \ubaa8\ub378\ub4e4\uc744 \ud30c\uc774\ud504\ub77c\uc778\ud654 \uc2dc\ud0a4\ub294 \uac83\uc785\ub2c8\ub2e4.\n\ud30c\uc774\ud504\ub77c\uc778\ub41c \ubaa8\ub378\uc740 \uc544\ub798\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"model_pipeline.predict(X_train)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"model_pipeline")," \uc548\uc5d0\ub294 \ud559\uc2b5\uc774 \uc644\ub8cc\ub41c scaler \uc640 SVC \uac00 \uac19\uc774 \uc874\uc7ac\ud558\uae30 \ub54c\ubb38\uc5d0 \uc704\uc5d0\uc11c \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc2e4\uc218\ub97c \uc5c6\uc560\uc90d\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ubb3c\ub860 \uc774 \ubc29\ubc95\uc5d0\ub3c4 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud55c\ubc88 \uad6c\ucd95\ub41c \ud30c\uc774\ud504\ub77c\uc778\uc740 \uc218\uc815\ud558\uae30 \uc5b4\ub835\ub2e4\ub294 \uc810\uacfc scaler \ucc98\ub7fc \ud55c \ubaa8\ub378\uc5d0\uc11c\ub9cc \uc4f0\uc774\ub294\uac8c \uc544\ub2c8\ub77c \uc5ec\ub7ec \ubaa8\ub378\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac83\ub4e4\uc744 \uc911\ubcf5\uc801\uc73c\ub85c \ud559\uc2b5\ud574\uc57c \ud55c\ub2e4\ub294 \uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",{id:"12-code"},"1.2 Code"),(0,r.kt)("p",null,"\uc9c1\uc811 \ubaa8\ub378\ub4e4\uc744 \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc791\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sklearn.pipeline")," \uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"Pipeline")," \uc744 \ud1b5\ud574 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub54c \ud30c\uc774\ud504\ub77c\uc778 \uc548\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uac12\uc740 \ub9ac\uc2a4\ud2b8\uc774\uba70 \ub9ac\uc2a4\ud2b8 \uc548\uc5d0\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"(\ubaa8\ub378 \uc774\ub984, \ubaa8\ub378 \uac1d\uccb4)")," \uac00 \uac12\uc73c\ub85c \ub4e4\uc5b4\uac11\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_train.py"',title:'"pipeline_train.py"'},'from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.svm import SVC\n\nmodel_pipeline = Pipeline([("scaler", StandardScaler()), ("svc", SVC())])\n')),(0,r.kt)("p",null,"\uc774\uc81c \uc0dd\uc131\ud55c \ud30c\uc774\ud504\ub77c\uc778\uc744 \ud559\uc2b5\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ud559\uc2b5 \ubc29\ubc95\uc740 \uc77c\ubc18\uc801\uc778 ",(0,r.kt)("inlineCode",{parentName:"p"},"scikit-learn")," \uc758 \ubaa8\ub378\ucc98\ub7fc \uc9c4\ud589\ud558\uba74 \ub429\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_train.py"',title:'"pipeline_train.py"'},"model_pipeline.fit(X_train, y_train)\n")),(0,r.kt)("p",null,"\ud559\uc2b5\uc774 \uc644\ub8cc\ub41c \ud30c\uc774\ud504\ub77c\uc778\uc740 \ubc14\ub85c \uc608\uce21\uc744 \ud558\uac70\ub098 \uac01 \ub2e8\uacc4\ubcc4\ub85c \uc9c4\ud589\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4\uc11c scaler \ub9cc \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0\uc5d0\ub294 \uc544\ub798\ucc98\ub7fc \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_train.py"',title:'"pipeline_train.py"'},"print(model_pipeline[0].transform(X_train[:1]))\n# [[-1.71687346 -0.1513372  -1.37527528 -1.29070478]]\n")),(0,r.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc608\uce21\uc744 \ud558\uace0 \uc815\ud655\ub3c4\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_train.py"',title:'"pipeline_train.py"'},'from sklearn.metrics import accuracy_score\n\ntrain_pred = model_pipeline.predict(X_train)\nvalid_pred = model_pipeline.predict(X_valid)\n\ntrain_acc = accuracy_score(y_true=y_train, y_pred=train_pred)\nvalid_acc = accuracy_score(y_true=y_valid, y_pred=valid_pred)\n\nprint("Train Accuracy :", train_acc)\nprint("Valid Accuracy :", valid_acc)\n# Train Accuracy : 0.9833333333333333\n# Valid Accuracy : 0.9666666666666667\n')),(0,r.kt)("p",null,"\ub9c8\uc9c0\ub9c9\uc73c\ub85c \ubaa8\ub378\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. ",(0,r.kt)(p.W,{mdxType:"Chapter"},"1) Base Model Development")," \ucc55\ud130\ucc98\ub7fc \ub530\ub85c \ud560 \ud544\uc694\uc5c6\uc774 \ud558\ub098\uc758 \ud30c\uc77c\ub85c \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_train.py"',title:'"pipeline_train.py"'},'import joblib\n\njoblib.dump(model_pipeline, "model_pipeline.joblib")\n')),(0,r.kt)("h3",{id:"13-pipeline_trainpy"},"1.3 ",(0,r.kt)("inlineCode",{parentName:"h3"},"pipeline_train.py")),(0,r.kt)("p",null,"\uc704\uc5d0\uc11c \uc791\uc131\ud55c \ucf54\ub4dc\ub97c \ubaa8\uc544\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"pipeline_train.py")," \ub85c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_train.py"',title:'"pipeline_train.py"'},'# pipeline_train.py\nimport joblib\nfrom sklearn.datasets import load_iris\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.svm import SVC\n\n# 1. get data\nX, y = load_iris(return_X_y=True, as_frame=True)\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, random_state=2022)\n\n# 2. model development and train\nmodel_pipeline = Pipeline([("scaler", StandardScaler()), ("svc", SVC())])\nmodel_pipeline.fit(X_train, y_train)\n\ntrain_pred = model_pipeline.predict(X_train)\nvalid_pred = model_pipeline.predict(X_valid)\n\ntrain_acc = accuracy_score(y_true=y_train, y_pred=train_pred)\nvalid_acc = accuracy_score(y_true=y_valid, y_pred=valid_pred)\n\nprint("Train Accuracy :", train_acc)\nprint("Valid Accuracy :", valid_acc)\n\n# 3. save model\njoblib.dump(model_pipeline, "model_pipeline.joblib")\n')),(0,r.kt)("h2",{id:"2-pipeline_validate_save_modelpy"},"2. ",(0,r.kt)("inlineCode",{parentName:"h2"},"pipeline_validate_save_model.py")),(0,r.kt)("p",null,"\uc800\uc7a5\ub41c \ud30c\uc774\ud504\ub77c\uc778\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\ub294 \uc9c0 \uac80\uc99d\ud558\uae30 \uc704\ud574 ",(0,r.kt)(p.W,{mdxType:"Chapter"},"1) Base Model Development")," \ucc55\ud130\uc5d0\uc11c \uc791\uc131\ud55c ",(0,r.kt)("inlineCode",{parentName:"p"},"base_validate_save_model.py")," \uc758 \ucf54\ub4dc\ub97c \uc218\uc815\ud558\uc5ec ",(0,r.kt)("inlineCode",{parentName:"p"},"pipeline_validate_save_model.py")," \ub85c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="pipeline_validate_save_model.py"',title:'"pipeline_validate_save_model.py"'},'# pipeline_validate_save_model.py\nimport joblib\nfrom sklearn.datasets import load_iris\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\n\n# 1. reproduce data\nX, y = load_iris(return_X_y=True, as_frame=True)\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, random_state=2022)\n\n# 2. load model\nmodel_pipeline_load = joblib.load("model_pipeline.joblib")\n\n# 3. validate\nload_train_pred = model_pipeline_load.predict(X_train)\nload_valid_pred = model_pipeline_load.predict(X_valid)\n\nload_train_acc = accuracy_score(y_true=y_train, y_pred=load_train_pred)\nload_valid_acc = accuracy_score(y_true=y_valid, y_pred=load_valid_pred)\n\nprint("Load Model Train Accuracy :", load_train_acc)\nprint("Load Model Valid Accuracy :", load_valid_acc)\n')))}u.isMDXComponent=!0}}]);