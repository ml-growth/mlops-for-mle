"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[7706],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,_=m["".concat(o,".").concat(u)]||m[u]||c[u]||l;return a?n.createElement(_,i(i({ref:t},s),{},{components:a})):n.createElement(_,i({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1007:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(7294),r=a(6010);const l="browserWindow_my1Q",i="browserWindowHeader_jXSR",d="buttons_uHc7",o="browserWindowAddressBar_Pd8y",p="dot_giz1",s="browserWindowMenuIcon_Vhuh",c="bar_rrRL",m="browserWindowBody_Idgs";function u(e){let{children:t,minHeight:a,url:u="http://localhost:3000"}=e;return n.createElement("div",{className:l,style:{minHeight:a}},n.createElement("div",{className:i},n.createElement("div",{className:d},n.createElement("span",{className:p,style:{background:"#f25f58"}}),n.createElement("span",{className:p,style:{background:"#fbbe3c"}}),n.createElement("span",{className:p,style:{background:"#58cb42"}})),n.createElement("div",{className:(0,r.Z)(o,"text--truncate")},u),n.createElement("div",{className:s},n.createElement("div",null,n.createElement("span",{className:c}),n.createElement("span",{className:c}),n.createElement("span",{className:c})))),n.createElement("div",{className:m},t))}},2232:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);const r="codeDescription_fg9D",l="codeDescriptionBody_Gp1s";function i(e){let{children:t,minHeight:a}=e;return n.createElement("div",{className:r,style:{minHeight:a}},n.createElement("div",{className:l},t))}},3691:(e,t,a)=>{a.d(t,{L:()=>r,W:()=>l});var n=a(7294);function r(e){let{children:t}=e;return n.createElement("span",{style:{backgroundColor:"#9747FF",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}function l(e){let{children:t}=e;return n.createElement("span",{style:{backgroundColor:"#6A77D7",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}},5345:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);const r="PreviewDescription_enzD",l="PreviewDescriptionBody_t2U9";function i(e){let{children:t,minHeight:a}=e;return n.createElement("div",{className:r,style:{minHeight:a}},n.createElement("div",{className:l},t))}},1641:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>y,frontMatter:()=>p,metadata:()=>c,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),l=a(2232),i=a(5345),d=a(1007),o=a(3691);const p={sidebar_position:3,description:"\ud83d\udccc DB \uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc791\uc131\ud569\ub2c8\ub2e4."},s="3) Load Data from Database",c={unversionedId:"model-development/load-data-from-database",id:"model-development/load-data-from-database",title:"3) Load Data from Database",description:"\ud83d\udccc DB \uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc791\uc131\ud569\ub2c8\ub2e4.",source:"@site/docs/model-development/load-data-from-database.mdx",sourceDirName:"model-development",slug:"/model-development/load-data-from-database",permalink:"/tutorial/docs/model-development/load-data-from-database",draft:!1,editUrl:"https://github.com/mlops-for-mle/tutorial/tree/main/docs/model-development/load-data-from-database.mdx",tags:[],version:"current",lastUpdatedBy:"Dongmin Lee",lastUpdatedAt:1685695506,formattedLastUpdatedAt:"Jun 2, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"\ud83d\udccc DB \uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc791\uc131\ud569\ub2c8\ub2e4."},sidebar:"tutorialSidebar",previous:{title:"2) Model Pipeline",permalink:"/tutorial/docs/model-development/base-model-pipeline"},next:{title:"03. Model Registry",permalink:"/tutorial/docs/category/03-model-registry"}},m={},u=[{value:"Chapter Preview",id:"chapter-preview",level:2},{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:3},{value:"\uc2a4\ud399 \uba85\uc138\uc11c",id:"\uc2a4\ud399-\uba85\uc138\uc11c",level:3},{value:"1. Load Data",id:"1-load-data",level:2},{value:"1.1 Query",id:"11-query",level:3},{value:"1.2 Pandas",id:"12-pandas",level:3},{value:"2. Save Data",id:"2-save-data",level:2},{value:"3. \uc804\uccb4 \ucf54\ub4dc",id:"3-\uc804\uccb4-\ucf54\ub4dc",level:2},{value:"3.1 <code>db_train.py</code>",id:"31-db_trainpy",level:3},{value:"3.2 <code>validate_save_model.py</code>",id:"32-validate_save_modelpy",level:3}],_={toc:u};function y(e){let{components:t,...p}=e;return(0,r.kt)("wrapper",(0,n.Z)({},_,p,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"3-load-data-from-database"},"3) Load Data from Database"),(0,r.kt)(i.Z,{mdxType:"PreviewDescription"},(0,r.kt)("h2",{id:"chapter-preview"},"Chapter Preview"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"DB \uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc791\uc131\ud569\ub2c8\ub2e4.")),(0,r.kt)("h3",{id:"\uc2a4\ud399-\uba85\uc138\uc11c"},"\uc2a4\ud399 \uba85\uc138\uc11c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(o.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ud55c DB \uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc635\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," column \uc744 \uae30\uc900\uc73c\ub85c \ucd5c\uc2e0 \ub370\uc774\ud130 100\uac1c\ub97c \ucd94\ucd9c\ud558\ub294 \ucffc\ub9ac\ubb38\uc744 \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pandas.read_sql")," \ud568\uc218\ub97c \uc774\uc6a9\ud574 \ub370\uc774\ud130\ub97c \ucd94\ucd9c\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ol"},"\ubaa8\ub378 \ud30c\uc774\ud504\ub77c\uc778 \uc218\uc815",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(o.W,{mdxType:"Chapter"},"1) Base Model Development")," \ucc55\ud130\uc5d0\uc11c \uc791\uc131\ud55c \ud30c\uc774\ud504\ub77c\uc778 \uc911 \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc624\ub294 \ubd80\ubd84\uc744 \uc704\uc5d0\uc11c \uc791\uc131\ud55c \ud568\uc218\ub85c \uc218\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\ubaa8\ub378\uc744 \ud559\uc2b5\ud558\uace0 \uc800\uc7a5\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc800\uc7a5\ub41c \ubaa8\ub378\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4."))))),(0,r.kt)(d.Z,{url:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part2",mdxType:"BrowserWindow"},(0,r.kt)("p",null,"\ud574\ub2f9 \ud30c\ud2b8\uc758 \uc804\uccb4 \ucf54\ub4dc\ub294 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part2"},"mlops-for-mle/part2/")," \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"part2\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 base_train.py\n\u251c\u2500\u2500 base_validate_save_model.py\n// highlight-next-line\n\u251c\u2500\u2500 db_train.py\n// highlight-next-line\n\u251c\u2500\u2500 db_validate_save_model.py\n\u251c\u2500\u2500 pipeline_train.py\n\u2514\u2500\u2500 pipeline_validate_save_model.py\n"))),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"database workflow",src:a(6283).Z,width:"2888",height:"684"}),"\n","[\uadf8\ub9bc 2-2]"," Database Workflow")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udccc  \ud574\ub2f9 \ucc55\ud130\ub294 ",(0,r.kt)(o.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\uc758 DB \ub97c \uc774\uc6a9\ud569\ub2c8\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ud83d\udccc  DB \ub97c \ub744\uc6b0\uc9c0 \uc54a\uc740 \uacbd\uc6b0 ",(0,r.kt)(o.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\ub97c \uc644\ub8cc\ud558\uace0 DB \uac00 \ub744\uc6cc\uc9c4 \uc0c1\ud0dc\uc5d0\uc11c \uc9c4\ud589\ud574\uc8fc\uc138\uc694.")),(0,r.kt)("h2",{id:"1-load-data"},"1. Load Data"),(0,r.kt)("h3",{id:"11-query"},"1.1 Query"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"id")," column\uc744 \uae30\uc900\uc73c\ub85c \ucd5c\uc2e0 \ub370\uc774\ud130 100\uac1c\ub97c \ucd94\ucd9c\ud558\ub294 \ucffc\ub9ac\ubb38\uc744 \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM iris_data ORDER BY id DESC LIMIT 100;\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"psql")," \uc5d0\uc11c \ud574\ub2f9 \ucffc\ub9ac\ubb38\uc744 \uc785\ub825\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ucd9c\ub825\ub429\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"mydatabase=# SELECT * FROM iris_data ORDER BY id DESC LIMIT 100;\nid  |         timestamp          | sepal_length | sepal_width | petal_length | petal_width | target\n-----+----------------------------+--------------+-------------+--------------+-------------+--------\n   1 | 2023-01-15 06:08:58.995035 |          6.8 |         2.8 |          4.8 |         1.4 |      1\n   2 | 2023-01-15 06:09:00.033342 |          6.3 |         2.5 |            5 |         1.9 |      2\n   3 | 2023-01-15 06:09:01.063739 |          6.3 |         3.3 |          4.7 |         1.6 |      1\n   4 | 2023-01-15 06:09:02.098688 |          6.3 |         3.3 |          4.7 |         1.6 |      1\n   5 | 2023-01-15 06:09:03.131971 |            5 |         3.2 |          1.2 |         0.2 |      0\n(...)\n")),(0,r.kt)("h3",{id:"12-pandas"},"1.2 Pandas"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pandas.read_sql")," \ub294 \uc785\ub825 argument \ub85c query \uc640 DB connector \ub97c \ubc1b\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"PostgreSQL DB \uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 DB connector \ub97c \uc0dd\uc131 \ud6c4 query \uc640 DB connector \ub97c \uc774\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc635\ub2c8\ub2e4.\nDB \uc5d0 \uc5f0\uacb0\ud558\uae30 \uc704\ud55c \uc815\ubcf4\ub294 ",(0,r.kt)(o.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\uc758 ",(0,r.kt)(o.W,{mdxType:"Chapter"},"6) Data Generator on Docker Compose")," \ucc55\ud130\uc5d0\uc11c DB \uc11c\ubc84\ub97c \uc0dd\uc131\ud560 \ub54c \uc785\ub825\ud55c \uac12\uc785\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="db_train.py"',title:'"db_train.py"'},'import pandas as pd\nimport psycopg2\n\ndb_connect = psycopg2.connect(host="localhost", database="mydatabase", user="myuser", password="mypassword")\ndf = pd.read_sql("SELECT * FROM iris_data ORDER BY id DESC LIMIT 100", db_connect)\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"db connect ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"host")," : ",(0,r.kt)("code",null,"localhost")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"database")," : ",(0,r.kt)("code",null,"mydatabase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"user")," : ",(0,r.kt)("code",null,"myuser")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"password")," : ",(0,r.kt)("code",null,"mypassword")))))),(0,r.kt)("p",null,"\ucd94\ucd9c\ub41c \ub370\uc774\ud130\ub97c \ud655\uc778\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"print(df.head(5))\n#      id                  timestamp  sepal_length  sepal_width  petal_length  petal_width  target\n# 0   1204 2023-01-15 06:29:35.214374           7.2          3.2           6.0          1.8       2\n# 1   1203 2023-01-15 06:29:34.196810           5.0          3.5           1.3          0.3       0\n# 2   1202 2023-01-15 06:29:33.184427           5.9          3.0           4.2          1.5       1\n# 3   1201 2023-01-15 06:29:32.163934           6.4          3.1           5.5          1.8       2\n# 4   1200 2023-01-15 06:29:31.138341           5.8          2.7           5.1          1.9       2\n")),(0,r.kt)(o.W,{mdxType:"Chapter"},"2) Model Pipeline")," \ucc55\ud130\uc5d0\uc11c \uc791\uc131\ud55c ",(0,r.kt)("code",null,"base_train.py")," \uc758 ",(0,r.kt)("code",null,"# 1. get data")," \ubd80\ubd84\uc744 \uc704\uc5d0\uc11c \uc791\uc131\ud55c \ucf54\ub4dc\ub85c \uc218\uc815\ud569\ub2c8\ub2e4.",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="db_train.py"',title:'"db_train.py"'},'# db_train.py\nimport pandas as pd\nimport psycopg2\nfrom sklearn.model_selection import train_test_split\n\n# 1. get data\ndb_connect = psycopg2.connect(host="localhost", database="mydatabase", user="myuser", password="mypassword")\ndf = pd.read_sql("SELECT * FROM iris_data ORDER BY id DESC LIMIT 100", db_connect)\nX = df.drop(["id", "timestamp", "target"], axis="columns")\ny = df["target"]\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, random_state=2022)\n')),(0,r.kt)("h2",{id:"2-save-data"},"2. Save Data"),(0,r.kt)("p",null,"\uc774\uc5b4\uc11c \uc0ac\uc6a9\ud55c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"# 4. save data")," \ubd80\ubd84\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.\n\ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\ub294 \uc774\uc720\ub294 \ud604\uc7ac DB \uc5d0 \uacc4\uc18d\ud574\uc11c \ub370\uc774\ud130\uac00 \uc313\uc774\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ub9e4\ubc88 \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc62c \ub54c\ub9c8\ub2e4 \ub370\uc774\ud130\uac00 \ubc14\ub01d\ub2c8\ub2e4.\n\ub370\uc774\ud130\uac00 \ubc14\ub00c\uba74 \ubaa8\ub378\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \ubd88\ub7ec\uc654\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud55c \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uc5ec \ud3c9\uac00\ud558\ub294 \ubd80\ubd84\uc5d0\uc11c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="db_train.py"',title:'"db_train.py"'},'# 4. save data\ndf.to_csv("data.csv", index=False)\n')),(0,r.kt)("h2",{id:"3-\uc804\uccb4-\ucf54\ub4dc"},"3. \uc804\uccb4 \ucf54\ub4dc"),(0,r.kt)("h3",{id:"31-db_trainpy"},"3.1 ",(0,r.kt)("inlineCode",{parentName:"h3"},"db_train.py")),(0,r.kt)("p",null,"\uc704\uc5d0\uc11c \uc791\uc131\ud55c \ub0b4\uc6a9\uc744 \ubaa8\uc544\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"db_train.py")," \ub85c \uc791\uc131\ud558\uba74 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="db_train.py"',title:'"db_train.py"'},'# db_train.py\nimport joblib\nimport pandas as pd\nimport psycopg2\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.svm import SVC\n\n# 1. get data\ndb_connect = psycopg2.connect(host="localhost", database="mydatabase", user="myuser", password="mypassword")\ndf = pd.read_sql("SELECT * FROM iris_data ORDER BY id DESC LIMIT 100", db_connect)\nX = df.drop(["id", "timestamp", "target"], axis="columns")\ny = df["target"]\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, random_state=2022)\n\n# 2. model development and train\nmodel_pipeline = Pipeline([("scaler", StandardScaler()), ("svc", SVC())])\nmodel_pipeline.fit(X_train, y_train)\n\ntrain_pred = model_pipeline.predict(X_train)\nvalid_pred = model_pipeline.predict(X_valid)\n\ntrain_acc = accuracy_score(y_true=y_train, y_pred=train_pred)\nvalid_acc = accuracy_score(y_true=y_valid, y_pred=valid_pred)\n\nprint("Train Accuracy :", train_acc)\nprint("Valid Accuracy :", valid_acc)\n\n# 3. save model\njoblib.dump(model_pipeline, "db_pipeline.joblib")\n\n# 4. save data\ndf.to_csv("data.csv", index=False)\n')),(0,r.kt)("h3",{id:"32-validate_save_modelpy"},"3.2 ",(0,r.kt)("inlineCode",{parentName:"h3"},"validate_save_model.py")),(0,r.kt)("p",null,"\ub2e4\uc74c\uc740 ",(0,r.kt)(o.W,{mdxType:"Chapter"},"2) Model Pipeline")," \ucc55\ud130\uc5d0\uc11c \uc800\uc7a5\ub41c \ubaa8\ub378\uc744 \uac80\uc99d\ud558\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"base_validate_save_model.py")," \ub97c \uc218\uc815\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"db_validate_save_model.py")," \ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4.\n\uadf8\ub9ac\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"# 1. reproduce data")," \uc5d0\uc11c \uc800\uc7a5\ub41c \ub370\uc774\ud130\ub97c \ubd88\ub7ec\uc624\ub3c4\ub85d \uc218\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="db_validate_save_model.py"',title:'"db_validate_save_model.py"'},'# db_validate_save_model.py\nimport joblib\nimport pandas as pd\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\n\n# 1. reproduce data\ndf = pd.read_csv("data.csv")\nX = df.drop(["id", "timestamp", "target"], axis="columns")\ny = df["target"]\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, random_state=2022)\n\n# 2. load model\npipeline_load = joblib.load("db_pipeline.joblib")\n\n# 3. validate\nload_train_pred = pipeline_load.predict(X_train)\nload_valid_pred = pipeline_load.predict(X_valid)\n\nload_train_acc = accuracy_score(y_true=y_train, y_pred=load_train_pred)\nload_valid_acc = accuracy_score(y_true=y_valid, y_pred=load_valid_pred)\n\nprint("Load Model Train Accuracy :", load_train_acc)\nprint("Load Model Valid Accuracy :", load_valid_acc)\n')))}y.isMDXComponent=!0},6283:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/model-development-2-f3f112ac4bf173365572e764bf7dc750.png"}}]);