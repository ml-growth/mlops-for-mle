"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[4250],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||l;return a?n.createElement(k,i(i({ref:t},m),{},{components:a})):n.createElement(k,i({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1007:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7294),r=a(6010);const l="browserWindow_my1Q",i="browserWindowHeader_jXSR",o="buttons_uHc7",s="browserWindowAddressBar_Pd8y",p="dot_giz1",m="browserWindowMenuIcon_Vhuh",u="bar_rrRL",c="browserWindowBody_Idgs";function d(e){let{children:t,minHeight:a,url:d="http://localhost:3000"}=e;return n.createElement("div",{className:l,style:{minHeight:a}},n.createElement("div",{className:i},n.createElement("div",{className:o},n.createElement("span",{className:p,style:{background:"#f25f58"}}),n.createElement("span",{className:p,style:{background:"#fbbe3c"}}),n.createElement("span",{className:p,style:{background:"#58cb42"}})),n.createElement("div",{className:(0,r.Z)(s,"text--truncate")},d),n.createElement("div",{className:m},n.createElement("div",null,n.createElement("span",{className:u}),n.createElement("span",{className:u}),n.createElement("span",{className:u})))),n.createElement("div",{className:c},t))}},2232:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);const r="codeDescription_fg9D",l="codeDescriptionBody_Gp1s";function i(e){let{children:t,minHeight:a}=e;return n.createElement("div",{className:r,style:{minHeight:a}},n.createElement("div",{className:l},t))}},3691:(e,t,a)=>{a.d(t,{L:()=>r,W:()=>l});var n=a(7294);function r(e){let{children:t}=e;return n.createElement("span",{style:{backgroundColor:"#9747FF",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}function l(e){let{children:t}=e;return n.createElement("span",{style:{backgroundColor:"#6A77D7",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}},5345:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);const r="PreviewDescription_enzD",l="PreviewDescriptionBody_t2U9";function i(e){let{children:t,minHeight:a}=e;return n.createElement("div",{className:r,style:{minHeight:a}},n.createElement("div",{className:l},t))}},1707:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>m,default:()=>g,frontMatter:()=>p,metadata:()=>u,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),l=a(2232),i=a(5345),o=a(1007),s=a(3691);const p={sidebar_position:1,description:"\ud83d\udccc Stream Serving \uc744 \uc704\ud55c Data Subscriber \ucf54\ub4dc\ub97c \uc791\uc131\ud569\ub2c8\ub2e4."},m="1) Stream Serving",u={unversionedId:"stream/stream-serving",id:"stream/stream-serving",title:"1) Stream Serving",description:"\ud83d\udccc Stream Serving \uc744 \uc704\ud55c Data Subscriber \ucf54\ub4dc\ub97c \uc791\uc131\ud569\ub2c8\ub2e4.",source:"@site/docs/stream/stream-serving.mdx",sourceDirName:"stream",slug:"/stream/stream-serving",permalink:"/tutorial/docs/stream/stream-serving",draft:!1,editUrl:"https://github.com/mlops-for-mle/tutorial/tree/main/docs/stream/stream-serving.mdx",tags:[],version:"current",lastUpdatedBy:"Jongseob Jeon",lastUpdatedAt:1716862480,formattedLastUpdatedAt:"2024\ub144 5\uc6d4 28\uc77c",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"\ud83d\udccc Stream Serving \uc744 \uc704\ud55c Data Subscriber \ucf54\ub4dc\ub97c \uc791\uc131\ud569\ub2c8\ub2e4."},sidebar:"tutorialSidebar",previous:{title:"0) Overview",permalink:"/tutorial/docs/stream/overview"},next:{title:"2) Dashboard",permalink:"/tutorial/docs/stream/dashboard"}},c={},d=[{value:"Chapter Preview",id:"chapter-preview",level:2},{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:3},{value:"\uc2a4\ud399 \uba85\uc138\uc11c",id:"\uc2a4\ud399-\uba85\uc138\uc11c",level:3},{value:"0. \ud328\ud0a4\uc9c0 \uc124\uce58",id:"0-\ud328\ud0a4\uc9c0-\uc124\uce58",level:2},{value:"1. Architecture",id:"1-architecture",level:2},{value:"2. Data Subscriber",id:"2-data-subscriber",level:2},{value:"2.1 Prediction \ud14c\uc774\ube14 \uc0dd\uc131",id:"21-prediction-\ud14c\uc774\ube14-\uc0dd\uc131",level:3},{value:"2.2 Consumer \uc0dd\uc131",id:"22-consumer-\uc0dd\uc131",level:3},{value:"2.3 API \ud638\ucd9c",id:"23-api-\ud638\ucd9c",level:3},{value:"2.3.1 Schema \ud655\uc778",id:"231-schema-\ud655\uc778",level:4},{value:"2.3.2 API \uc694\uccad \ubc0f \uc751\ub2f5",id:"232-api-\uc694\uccad-\ubc0f-\uc751\ub2f5",level:4},{value:"2.4 Prediction \ud14c\uc774\ube14\uc5d0 \uc608\uce21\uac12 \uc0bd\uc785",id:"24-prediction-\ud14c\uc774\ube14\uc5d0-\uc608\uce21\uac12-\uc0bd\uc785",level:3},{value:"2.5 <code>data_subscriber.py</code>",id:"25-data_subscriberpy",level:3},{value:"3. Docker Compose",id:"3-docker-compose",level:2},{value:"3.1 Dockerfile",id:"31-dockerfile",level:3},{value:"3.2 Docker Compose",id:"32-docker-compose",level:3},{value:"3.3 \uc2e4\ud589",id:"33-\uc2e4\ud589",level:3},{value:"3.4 \ub370\uc774\ud130 \ud655\uc778",id:"34-\ub370\uc774\ud130-\ud655\uc778",level:3}],k={toc:d};function g(e){let{components:t,...p}=e;return(0,r.kt)("wrapper",(0,n.Z)({},k,p,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"1-stream-serving"},"1) Stream Serving"),(0,r.kt)(i.Z,{mdxType:"PreviewDescription"},(0,r.kt)("h2",{id:"chapter-preview"},"Chapter Preview"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Stream Serving \uc744 \uc704\ud55c Data Subscriber \ucf54\ub4dc\ub97c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"Docker Compose \ub97c \uc774\uc6a9\ud558\uc5ec Data Subcriber \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"Target DB \uc5d0 \uc811\uc18d\ud558\uc5ec \uc608\uce21\uac12\uc774 \uc798 \uc313\uc774\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.")),(0,r.kt)("h3",{id:"\uc2a4\ud399-\uba85\uc138\uc11c"},"\uc2a4\ud399 \uba85\uc138\uc11c"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Stream Serving \uc744 \uc704\ud55c Data Subscriber \ucf54\ub4dc\ub97c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"psycopg2")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec \uc608\uce21\uac12\uc744 \uc800\uc7a5\ud560 ",(0,r.kt)("inlineCode",{parentName:"li"},"iris_prediction")," \ud14c\uc774\ube14\uc744 Target DB \uc11c\ubc84\uc5d0 \uc0dd\uc131\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"kafka-python")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec ",(0,r.kt)(s.L,{mdxType:"Part"},"07. Kafka")," \ud30c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ud55c \ud1a0\ud53d\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc62c \uc218 \uc788\ub294 Consumer \ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"Topic name")," : ",(0,r.kt)("code",null,"postgres-source-iris_data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"bootstrap_servers")," : ",(0,r.kt)("code",null,"broker:29092")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"auto_offset_reset")," : ",(0,r.kt)("code",null,"earliest")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"group_id")," : ",(0,r.kt)("code",null,"iris-data-consumer-group")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"value_deserializer")," : ",(0,r.kt)("code",null,"lambda x: loads(x)")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"requests")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec API \uc5d0 \ubaa8\ub378\uc758 \uc608\uce21\uc744 \uc694\uccad\ud558\uace0 \uc608\uce21\uac12\uc744 \ubc1b\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:4},(0,r.kt)("li",{parentName:"ol"},"\uacb0\uacfc\uac12\uc744 ",(0,r.kt)("inlineCode",{parentName:"li"},"iris_prediction")," \ud14c\uc774\ube14\uc5d0 \uc0bd\uc785\ud569\ub2c8\ub2e4."))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Docker Compose \ub97c \uc774\uc6a9\ud558\uc5ec Data Subscriber \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Target DB \uc5d0 \uc811\uc18d\ud558\uc5ec \uc2e4\uc81c\ub85c \uc608\uce21\uac12\uc774 \uc798 \uc313\uc774\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.")))),(0,r.kt)(o.Z,{url:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part8",mdxType:"BrowserWindow"},(0,r.kt)("p",null,"\ud574\ub2f9 \ud30c\ud2b8\uc758 \uc804\uccb4 \ucf54\ub4dc\ub294 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part8"},"mlops-for-mle/part8/")," \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"part8\n// highlight-next-line\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n// highlight-next-line\n\u251c\u2500\u2500 data_subscriber.py\n\u251c\u2500\u2500 grafana-docker-compose.yaml\n// highlight-next-line\n\u2514\u2500\u2500 stream-docker-compose.yaml\n"))),(0,r.kt)("h2",{id:"0-\ud328\ud0a4\uc9c0-\uc124\uce58"},"0. \ud328\ud0a4\uc9c0 \uc124\uce58"),(0,r.kt)("p",null,"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \ud328\ud0a4\uc9c0\ub4e4\uc785\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# terminal-command\npip install kafka-python requests psycopg2-binary\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"kafka-python")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Python \uc5d0\uc11c Kafka \ub97c SDK \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub3c4\uc640\uc8fc\ub294 Kafka Python Client \ud328\ud0a4\uc9c0\uc785\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\ud574\ub2f9 \ucc55\ud130\uc5d0\uc11c\ub294 Consumer \ub97c \uad6c\ud604\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"requests")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Python \uc73c\ub85c HTTP \ud1b5\uc2e0\uc774 \ud544\uc694\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud560 \ub54c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \ud328\ud0a4\uc9c0\uc785\ub2c8\ub2e4. "),(0,r.kt)("li",{parentName:"ul"},"API \ub97c \ud638\ucd9c\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.")))),(0,r.kt)("h2",{id:"1-architecture"},"1. Architecture"),(0,r.kt)("p",null,"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c \uad6c\ud604\ud560 \uc11c\ube44\uc2a4\ub4e4\uc740 ","[\uadf8\ub9bc 8-2]","\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Stream serving flow",src:a(4875).Z,width:"2588",height:"2192"}),"\n","[\uadf8\ub9bc 8-2]"," Stream Serving Workflow")),(0,r.kt)("p",null,(0,r.kt)(s.L,{mdxType:"Part"},"07. Kafka")," \ud30c\ud2b8\uc5d0\uc11c\ub294 Source Connector \uc640 Sink Connector \ub97c \uc0dd\uc131\ud558\uc5ec Source DB \uc5d0\uc11c Target DB \ub85c \ub370\uc774\ud130\ub97c \uc804\ub2ec\ud558\ub294 \uacfc\uc815\uc744 \uc0b4\ud3b4\ubd24\uc2b5\ub2c8\ub2e4.",(0,r.kt)(s.L,{mdxType:"Part"},"08. Stream")," \ud30c\ud2b8\uc5d0\uc11c\ub294 \ub2e4\uc2dc Model Deployment \uad00\uc810\uc73c\ub85c \ub3cc\uc544\uc640\uc11c Kafka \ub97c \uc5b4\ub5bb\uac8c \uc4f8 \uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.",(0,r.kt)("br",null)),(0,r.kt)("p",null,"\uc774\ubc88 \ud30c\ud2b8\uc5d0\uc11c\ub294 ",(0,r.kt)(s.L,{mdxType:"Part"},"07. Kafka")," \ud30c\ud2b8\uc640 \ub3d9\uc77c\ud55c Zookeeper, Broker, Connect, Schema Registry \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c Source Connector \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub294 \uacfc\uc815\ub3c4 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \ub2ec\ub77c\uc9c0\ub294 \uc810\uc740 Sink Connector \ub97c \ub300\uc2e0\ud574\uc11c \uc9c1\uc811 Kafka Python SDK \ub97c \uc774\uc6a9\ud558\uc5ec Consumer \ub97c \uad6c\ud604\ud558\ub294 \uac83\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc65c \uc9c1\uc811 \uad6c\ud604\ud574\uc11c \uc0ac\uc6a9\ud574\uc57c \ud560\uae4c\uc694?",(0,r.kt)("br",null),(0,r.kt)(s.L,{mdxType:"Part"},"07. Kafka")," \ud30c\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud55c Sink Connector \ub97c \uc0b4\ud3b4 \ubcf4\uba74, \uc124\uc815 \ud30c\uc77c\uc744 \ud1b5\ud574 \uc0dd\uc131\ud55c \ud6c4 \uc790\ub3d9\uc73c\ub85c Sink Connector \uac00 \ud574\ub2f9 \ud1a0\ud53d\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub97c \uc77d\uc5b4\uc11c Target DB \uc5d0 \uc804\ub2ec\ud588\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc ",(0,r.kt)(s.L,{mdxType:"Part"},"08. Stream")," \ud30c\ud2b8\uc5d0\uc11c\ub294 ",(0,r.kt)(s.L,{mdxType:"Part"},"06. API serving")," \ud30c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ud55c API \uc11c\ubc84\uc5d0 request \ub97c \ubcf4\ub0b4\uace0 response \ub97c \ubc1b\uc544\uc57c\ud569\ub2c8\ub2e4. \uc774 \uacfc\uc815\uc5d0\uc11c Sink Connector \ub97c \uc4f0\ub824\uba74 \ud1a0\ud53d\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc77d\uc5b4\uc11c \uc804\ub2ec\ud560 endpoint \uac00 \ud544\uc694\ud558\uc9c0\ub9cc, API Serving \uc5d0\uc11c\ub294 \uc218\ub3d9\uc73c\ub85c request \ub97c \ubcf4\ub0b4\uace0 response \ub97c \ubc1b\uae30 \ub54c\ubb38\uc5d0 Sink Connector \ub97c \uc0ac\uc6a9\ud560 \uc218\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\ub530\ub77c\uc11c Source DB \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubc1b\uc544 API \uc11c\ubc84\ub85c \uc694\uccad\uc744 \ubcf4\ub0b4\uace0, \ubaa8\ub378\uc758 \uc608\uce21 \uac12\uc744 \ubc1b\uace0, \ubc1b\uc740 \uacb0\uacfc\ub97c Target DB \uc5d0 \uc0bd\uc785\ud558\ub294 \uacfc\uc815\uc744 \ub2f4\ub2f9\ud558\ub294 \ucf54\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 Sink Connector \uc5c6\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka-python"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"requests"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"psycopg2")," \ud328\ud0a4\uc9c0\ub4e4\uc744 \uc774\uc6a9\ud558\uc5ec Data Subscriber \ub97c \uad6c\ucd95\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. "),(0,r.kt)("h2",{id:"2-data-subscriber"},"2. Data Subscriber"),(0,r.kt)("p",null,"\uc774\ubc88\uc5d0 \uad6c\ud604\ud560 Data Subscriber \uc758 \uc808\ucc28\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"psycopg2")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec Target DB \uc5d0 \uc811\uadfc\ud558\uc5ec \ud14c\uc774\ube14\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"kafka-python")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec \ube0c\ub85c\ucee4\uc758 \ud1a0\ud53d\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub97c \uc77d\ub294 Consumer \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"requests")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec Consumer \ub97c \ud1b5\ud574 \ubc1b\uc740 \ub370\uc774\ud130\ub97c ",(0,r.kt)(s.L,{mdxType:"Part"},"06. API serving")," \ud30c\ud2b8\uc5d0\uc11c \ub744\uc6b4 API \uc11c\ubc84\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uace0 \uc608\uce21\uac12\uc744 \ubc1b\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"psycopg2")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec \ubc1b\uc740 response \ub97c Target DB \uc5d0 \uc0bd\uc785\ud569\ub2c8\ub2e4.")),(0,r.kt)("h3",{id:"21-prediction-\ud14c\uc774\ube14-\uc0dd\uc131"},"2.1 Prediction \ud14c\uc774\ube14 \uc0dd\uc131"),(0,r.kt)("p",null,"\uba3c\uc800, \uc608\uce21\uac12\uc744 \uc800\uc7a5\ud560 \ud14c\uc774\ube14\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.\n\uc804\ubc18\uc801\uc778 \ucf54\ub4dc\ub294 ",(0,r.kt)(s.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\uc640 \ub3d9\uc77c\ud558\uba70 \ub2e4\ub978 \ub0b4\uc6a9\uc740 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},'import psycopg2\n\ndef create_table(db_connect):\n    create_table_query = """\n    CREATE TABLE IF NOT EXISTS iris_prediction (\n        id SERIAL PRIMARY KEY,\n        timestamp timestamp,\n        iris_class int\n    );"""\n    print(create_table_query)\n    with db_connect.cursor() as cur:\n        cur.execute(create_table_query)\n        db_connect.commit()\n\nif __name__ == "__main__":\n    db_connect = psycopg2.connect(\n        user="targetuser",\n        password="targetpassword",\n        host="target-postgres-server",\n        port=5432,\n        database="targetdatabase",\n    )\n    create_table(db_connect)\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"Connection")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"user")," : ",(0,r.kt)("code",null,"targetuser")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"password")," : ",(0,r.kt)("code",null,"targetpassword")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"host")," : ",(0,r.kt)("code",null,"target-postgres-server")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"port")," : ",(0,r.kt)("code",null,"5432")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"database")," : ",(0,r.kt)("code",null,"targetdatabase")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"Table name")," : ",(0,r.kt)("code",null,"iris_prediction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"Schema")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"id (PK)"),", ",(0,r.kt)("code",null,"timestamp (timestamp)"),", ",(0,r.kt)("code",null,"iris_class (int)")))))),(0,r.kt)("h3",{id:"22-consumer-\uc0dd\uc131"},"2.2 Consumer \uc0dd\uc131"),(0,r.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c, Consumer \ub97c \uc0dd\uc131\ud558\uaca0\uc2b5\ub2c8\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"kafka-python")," \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud558\uc5ec ",(0,r.kt)("inlineCode",{parentName:"p"},"KafkaConsumer")," \uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uaca0\uc2b5\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},'from json import loads\nfrom kafka import KafkaConsumer\n\nconsumer = KafkaConsumer(\n    "postgres-source-iris_data",\n    bootstrap_servers="broker:29092",\n    auto_offset_reset="earliest",\n    group_id="iris-data-consumer-group",\n    value_deserializer=lambda x: loads(x),\n)\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"topics"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130\ub97c \uc77d\uc5b4\ub4e4\uc774\uace0 \uc2f6\uc740 \ud1a0\ud53d\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"bootstrap_servers")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Bootstrap \uc11c\ubc84\ub85c \ub744\uc6cc\uc838\uc788\ub294 \ube0c\ub85c\ucee4\uc758 ",(0,r.kt)("code",null,"\ube0c\ub85c\ucee4 \uc11c\ube44\uc2a4 \uc774\ub984 : \ube0c\ub85c\ucee4 \uc11c\ube44\uc2a4 \ub0b4\ubd80 \ud3ec\ud2b8")," \uc744 \ub123\uc2b5\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"auto_offset_reset")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\ud1a0\ud53d\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub97c \uc5b4\ub5a4 offset \uac12\ubd80\ud130 \uac00\uc838\uc62c \uc9c0 \uc124\uc815\ud569\ub2c8\ub2e4. "),(0,r.kt)("li",{parentName:"ul"},"2\uac00\uc9c0 \uc124\uc815\uc774 \uc788\uc73c\uba70, ",(0,r.kt)("code",null,"earliest")," \ub294 \uac00\uc7a5 \ucd08\uae30 offset \uac12, ",(0,r.kt)("code",null,"latest")," \ub294 \uac00\uc7a5 \ub9c8\uc9c0\ub9c9 offset \uac12\uc785\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 \uccab\ubc88\uc9f8 \ub370\uc774\ud130\ubd80\ud130 \uac00\uc838\uc624\uace0 \uc2f6\uae30 \ub54c\ubb38\uc5d0 ",(0,r.kt)("code",null,"earliest")," \ub97c \uc791\uc131\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"group_id")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Consumer \uadf8\ub8f9\uc744 \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uadf8\ub8f9 ID \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"value_deserializer")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Source Connector (\ub610\ub294 Produceer) \uc5d0\uc11c serialization \ub41c value \uac12\uc744 deserialization \ud560 \ub54c \uc0ac\uc6a9\ud560 deserializer \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)(s.L,{mdxType:"Part"},"07. Kafka")," \ud30c\ud2b8\uc5d0\uc11c\ub294 Connect \ub97c \ub744\uc6b8 \ub54c value converter \ub85c\uc368 Json Converter \ub97c \uc0ac\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub370\uc774\ud130\ub294 json \uc73c\ub85c serialization \uc774 \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 \ub370\uc774\ud130\ub97c \uc77d\uc5b4\uc11c Json Deserializer \ub97c \uc774\uc6a9\ud558\uc5ec deserialization \uc744 \ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 lambda function \uacfc json \uc758 ",(0,r.kt)("code",null,"loads")," \ub97c \uc774\uc6a9\ud558\uc5ec ",(0,r.kt)("code",null,"lambda x: loads(x)")," \ub97c \uc791\uc131\ud569\ub2c8\ub2e4."))))),(0,r.kt)("p",null,"\uc774\ub807\uac8c \ub9cc\ub4e4\uc5b4\uc9c4 Consumer \uc778\uc2a4\ud134\uc2a4\ub294 for \ubb38\uc744 \uc774\uc6a9\ud558\uc5ec \ud1a0\ud53d\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub97c \uc2e4\uc2dc\uac04\uc73c\ub85c \uacc4\uc18d\ud574\uc11c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},"for msg in consumer:\n    print(\n        f\"Topic : {msg.topic}\\n\"\n        f\"Partition : {msg.partition}\\n\"\n        f\"Offset : {msg.offset}\\n\"\n        f\"Key : {msg.key}\\n\"\n        f\"Value : {msg.value}\\n\",\n    )\n# Topic : postgres-source-iris_data\n# Partition : 0\n# Offset : 133\n# Key : None\n# Value : {'schema': {'type': 'struct', 'fields': [{'type': 'int32', 'optional': False, 'field': 'id'}, {'type': 'string', 'optional': True, 'field': 'timestamp'}, {'type': 'double', 'optional': True, 'field': 'sepal_length'}, {'type': 'double', 'optional': True, 'field': 'sepal_width'}, {'type': 'double', 'optional': True, 'field': 'petal_length'}, {'type': 'double', 'optional': True, 'field': 'petal_width'}, {'type': 'int32', 'optional': True, 'field': 'target'}], 'optional': False, 'name': 'iris_data'}, 'payload': {'id': 134, 'timestamp': '2022-12-15 04:49:41.21', 'sepal_length': 6.1, 'sepal_width': 2.8, 'petal_length': 4.0, 'petal_width': 1.3, 'target': 1}}\n# \n# Topic : postgres-source-iris_data\n# Partition : 0\n# Offset : 134\n# Key : None\n# Value : {'schema': {'type': 'struct', 'fields': [{'type': 'int32', 'optional': False, 'field': 'id'}, {'type': 'string', 'optional': True, 'field': 'timestamp'}, {'type': 'double', 'optional': True, 'field': 'sepal_length'}, {'type': 'double', 'optional': True, 'field': 'sepal_width'}, {'type': 'double', 'optional': True, 'field': 'petal_length'}, {'type': 'double', 'optional': True, 'field': 'petal_width'}, {'type': 'int32', 'optional': True, 'field': 'target'}], 'optional': False, 'name': 'iris_data'}, 'payload': {'id': 135, 'timestamp': '2022-12-15 04:49:42.27', 'sepal_length': 6.2, 'sepal_width': 2.9, 'petal_length': 4.3, 'petal_width': 1.3, 'target': 1}}\n#\n# Topic : postgres-source-iris_data\n# Partition : 0\n# Offset : 135\n# Key : None\n# Value : {'schema': {'type': 'struct', 'fields': [{'type': 'int32', 'optional': False, 'field': 'id'}, {'type': 'string', 'optional': True, 'field': 'timestamp'}, {'type': 'double', 'optional': True, 'field': 'sepal_length'}, {'type': 'double', 'optional': True, 'field': 'sepal_width'}, {'type': 'double', 'optional': True, 'field': 'petal_length'}, {'type': 'double', 'optional': True, 'field': 'petal_width'}, {'type': 'int32', 'optional': True, 'field': 'target'}], 'optional': False, 'name': 'iris_data'}, 'payload': {'id': 225, 'timestamp': '2022-12-15 04:51:14.238', 'sepal_length': 6.7, 'sepal_width': 3.1, 'petal_length': 4.4, 'petal_width': 1.4, 'target': 1}}\n")),(0,r.kt)("p",null,"Print \ubb38\uacfc \ucd9c\ub825\ub41c \ud615\ud0dc\ub97c \ud1b5\ud574 \uba54\uc2dc\uc9c0\uc5d0 \uc788\ub294 topic, partition, offset, key, value \uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc55e\uc73c\ub85c \uc0ac\uc6a9\ud560 \ub370\uc774\ud130\ub294 value \uc5d0 \uc788\ub294 payload \uac12\uc785\ub2c8\ub2e4."),(0,r.kt)("p",null,"payload \uac12\uc758 \ud615\ud0dc\ub97c \ubcf4\uba74 \uc544\ub798\uc640 \uac19\uc774 \ub098\uc624\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"'payload': {'id': 134, 'timestamp': '2022-12-15 04:49:41.21', 'sepal_length': 6.1, 'sepal_width': 2.8, 'petal_length': 4.0, 'petal_width': 1.3, 'target': 1}\n")),(0,r.kt)("h3",{id:"23-api-\ud638\ucd9c"},"2.3 API \ud638\ucd9c"),(0,r.kt)("p",null,"\ub2e4\uc74c \uacfc\uc815\uc740 \uc77d\uc5b4\ub4dc\ub9b0 \ub370\uc774\ud130\ub97c ",(0,r.kt)(s.L,{mdxType:"Part"},"06. API Serving")," \ud30c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ud55c API \uc11c\ubc84\uc5d0 \uc804\ub2ec\ud558\uace0, \uc608\uce21\uac12\uc744 \ubc1b\ub294 \uac83\uc785\ub2c8\ub2e4."),(0,r.kt)("h4",{id:"231-schema-\ud655\uc778"},"2.3.1 Schema \ud655\uc778"),(0,r.kt)("p",null,"\uba3c\uc800 ",(0,r.kt)(s.L,{mdxType:"Part"},"06. API Serving")," \ud30c\ud2b8\uc5d0\uc11c \ub744\uc6cc\ub454 API \uc11c\ubc84\uc758 schema \ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="schemas.py"',title:'"schemas.py"'},"from pydantic import BaseModel\n\nclass PredictIn(BaseModel):\n    sepal_length: float\n    sepal_width: float\n    petal_length: float\n    petal_width: float\n\nclass PredictOut(BaseModel):\n    iris_class: int\n")),(0,r.kt)("p",null,"API \uc11c\ubc84\uc5d0 request \ub85c \ubcf4\ub0bc \uac12\ub4e4\uc5d0\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"sepal_length"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"sepal_width"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"petal_length"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"petal_width")," column \uc774 \uc788\uace0, response \ub85c \ubc1b\ub294 \uac12\ub4e4\uc5d0\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"iris_class")," column \uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h4",{id:"232-api-\uc694\uccad-\ubc0f-\uc751\ub2f5"},"2.3.2 API \uc694\uccad \ubc0f \uc751\ub2f5"),(0,r.kt)("p",null,"API \uc11c\ubc84\uc5d0 request \ub85c \ubcf4\ub0bc \uac12\ub4e4 \uc911 payload \uc5d0\uc11c \ud544\uc694\uc5c6\ub294 column \ub4e4\uc744 \uc544\ub798\uc640 \uac19\uc774 \uc0ad\uc81c\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},'msg.value["payload"].pop("id")\nmsg.value["payload"].pop("target")\nts = msg.value["payload"].pop("timestamp")\n')),(0,r.kt)("p",null,"timestamp \uc758 \uacbd\uc6b0, Source DB \uc5d0\uc11c \ub098\uc628 timestamp \ub97c Target DB \uc5d0 \ub123\uc5b4\uc904 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ub611\uac19\uc774 \uc0ad\uc81c\ub294 \ud558\ub418, ",(0,r.kt)("inlineCode",{parentName:"p"},"ts")," \ubcc0\uc218\ub85c \ud560\ub2f9\ud574\uc90d\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc774\uc81c ",(0,r.kt)("inlineCode",{parentName:"p"},"requests")," \ud328\ud0a4\uc9c0\uc5d0 \uc788\ub294 POST method \ub97c \uc774\uc6a9\ud558\uc5ec payload \uac12\ub4e4\uc744 \ubcf4\ub0b4\uace0 response \ub97c \ubc1b\uc2b5\ub2c8\ub2e4. "),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},'response = requests.post(\n    url="http://api-with-model:8000/predict",\n    json=msg.value["payload"],\n    headers={"Content-Type": "application/json"},\n).json()\nresponse["timestamp"] = ts\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"url")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"API \uc11c\ubc84\uc758 endpoint \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 API \uc11c\ubc84\uc758 \ud638\uc2a4\ud2b8 \uc774\ub984\uacfc \ud3ec\ud2b8, \uadf8\ub9ac\uace0 POST method \uc778 predict \ub97c \ud569\ud558\uc5ec ",(0,r.kt)("code",null,"http://api-with-model:8000/predict")," \ub85c \ub123\uc5b4\uc90d\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"json")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"request \ub85c \ubcf4\ub0bc \uc778\uc790\uac12\ub4e4\uc744 \uba85\uc2dc\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 payload \uac12\uc778 ",(0,r.kt)("inlineCode",{parentName:"li"},'msg.value["payload"]')," \ub97c \ub123\uc5b4\uc90d\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"headers")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Client \uc5d0\uc11c Server \ub85c request \ub97c \ubcf4\ub0bc \ub54c \ubd80\uac00\uc801\uc778 \uc815\ubcf4\ub97c \uc804\uc1a1\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uc815\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 \ubcf4\ub0bc \ub54c json \ud615\uc2dd\uc73c\ub85c \ubcf4\ub0bc \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 ",(0,r.kt)("code",null,'{"Content-Type": "application/json"}')," header \ub85c \uc801\uc5b4\uc90d\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Response \ub97c \ubc1b\uace0 \ub09c \ub4a4\uc5d0 \uc544\uae4c \ub0a8\uaca8\ub450\uc5c8\ub358 ",(0,r.kt)("inlineCode",{parentName:"p"},"ts")," \ubcc0\uc218\ub97c response \uc5d0 \ub123\uc5b4\uc90d\ub2c8\ub2e4.")))),(0,r.kt)("h3",{id:"24-prediction-\ud14c\uc774\ube14\uc5d0-\uc608\uce21\uac12-\uc0bd\uc785"},"2.4 Prediction \ud14c\uc774\ube14\uc5d0 \uc608\uce21\uac12 \uc0bd\uc785"),(0,r.kt)("p",null,"\ub9c8\uc9c0\ub9c9\uc73c\ub85c ",(0,r.kt)(s.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud588\ub358 ",(0,r.kt)("inlineCode",{parentName:"p"},"insert_data")," \ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec response \uc5d0 \ub2f4\uae34 \ub370\uc774\ud130\ub97c Target DB \uc5d0 \uc0bd\uc785\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},'def insert_data(db_connect, data):\n    insert_row_query = f"""\n    INSERT INTO iris_prediction\n        (timestamp, iris_class)\n        VALUES (\n            \'{data["timestamp"]}\',\n            {data["iris_class"]}\n        );"""\n    print(insert_row_query)\n    with db_connect.cursor() as cur:\n        cur.execute(insert_row_query)\n        db_connect.commit()\n\ninsert_data(db_connect, response)\n')),(0,r.kt)("h3",{id:"25-data_subscriberpy"},"2.5 ",(0,r.kt)("inlineCode",{parentName:"h3"},"data_subscriber.py")),(0,r.kt)("p",null,"\uc55e\uc11c \uc0b4\ud3b4\ubd24\ub358 \ubaa8\ub4e0 \ucf54\ub4dc\ub4e4\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="data_subscriber.py"',title:'"data_subscriber.py"'},'# data_subscriber.py\nfrom json import loads\n\nimport psycopg2\nimport requests\nfrom kafka import KafkaConsumer\n\n\ndef create_table(db_connect):\n    create_table_query = """\n    CREATE TABLE IF NOT EXISTS iris_prediction (\n        id SERIAL PRIMARY KEY,\n        timestamp timestamp,\n        iris_class int\n    );"""\n    print(create_table_query)\n    with db_connect.cursor() as cur:\n        cur.execute(create_table_query)\n        db_connect.commit()\n\n\ndef insert_data(db_connect, data):\n    insert_row_query = f"""\n    INSERT INTO iris_prediction\n        (timestamp, iris_class)\n        VALUES (\n            \'{data["timestamp"]}\',\n            {data["iris_class"]}\n        );"""\n    print(insert_row_query)\n    with db_connect.cursor() as cur:\n        cur.execute(insert_row_query)\n        db_connect.commit()\n\n\ndef subscribe_data(db_connect, consumer):\n    for msg in consumer:\n        print(\n            f"Topic : {msg.topic}\\n"\n            f"Partition : {msg.partition}\\n"\n            f"Offset : {msg.offset}\\n"\n            f"Key : {msg.key}\\n"\n            f"Value : {msg.value}\\n",\n        )\n\n        msg.value["payload"].pop("id")\n        msg.value["payload"].pop("target")\n        ts = msg.value["payload"].pop("timestamp")\n\n        response = requests.post(\n            url="http://api-with-model:8000/predict",\n            json=msg.value["payload"],\n            headers={"Content-Type": "application/json"},\n        ).json()\n        response["timestamp"] = ts\n        insert_data(db_connect, response)\n\n\nif __name__ == "__main__":\n    db_connect = psycopg2.connect(\n        user="targetuser",\n        password="targetpassword",\n        host="target-postgres-server",\n        port=5432,\n        database="targetdatabase",\n    )\n    create_table(db_connect)\n\n    consumer = KafkaConsumer(\n        "postgres-source-iris_data",\n        bootstrap_servers="broker:29092",\n        auto_offset_reset="earliest",\n        group_id="iris-data-consumer-group",\n        value_deserializer=lambda x: loads(x),\n    )\n    subscribe_data(db_connect, consumer)\n')),(0,r.kt)("h2",{id:"3-docker-compose"},"3. Docker Compose"),(0,r.kt)("h3",{id:"31-dockerfile"},"3.1 Dockerfile"),(0,r.kt)("p",null,"Data Subscriber \ucf54\ub4dc\ub97c Docker \uc5d0\uc11c \uc2e4\ud589\ud560 Dockerfile \uc744 \ub9cc\ub4ed\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="Dockerfile"',title:'"Dockerfile"'},'FROM amd64/python:3.9-slim\n\nWORKDIR /usr/app\n\nRUN pip install -U pip &&\\\n    pip install psycopg2-binary kafka-python requests\n\nCOPY data_subscriber.py data_subscriber.py\n\nENTRYPOINT ["python", "data_subscriber.py"]\n')),(0,r.kt)("h3",{id:"32-docker-compose"},"3.2 Docker Compose"),(0,r.kt)("p",null,"Dockerfile \uc744 \uc774\uc6a9\ud558\uc5ec Docker Compose \ud30c\uc77c\uc744 \uad6c\uc131\ud558\uba74 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="stream-docker-compose.yaml"',title:'"stream-docker-compose.yaml"'},'# stream-docker-compose.yaml\nversion: "3"\n\nservices:\n  data-subscriber:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: data-subscriber\n\nnetworks:\n  default:\n    name: mlops-network\n    external: true\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\uc11c\ube44\uc2a4\ub4e4\uc744 \uc5f0\uacb0\ud560 Docker Network \ub294 ",(0,r.kt)(s.L,{mdxType:"Part"},"01. Database")," \ud30c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ud55c ",(0,r.kt)("inlineCode",{parentName:"li"},"mlops-network")," \ub124\ud2b8\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. ")),(0,r.kt)("h3",{id:"33-\uc2e4\ud589"},"3.3 \uc2e4\ud589"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docker compose")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec Data Subscriber \uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,r.kt)(l.Z,{mdxType:"CodeDescription"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# terminal-command\ndocker compose -p part8-stream -f stream-docker-compose.yaml up -d\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"-p")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Project name \uc740 ",(0,r.kt)("code",null,"part8-stream")," \ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("var",null,"-f")," :",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"File name \uc740 \uc704\uc5d0\uc11c \uc791\uc131\ud55c \ud30c\uc77c \uc774\ub984\uc778 ",(0,r.kt)("code",null,"stream-docker-compose.yaml")," \uc744 \uc801\uc5b4\uc90d\ub2c8\ub2e4."))))),(0,r.kt)("h3",{id:"34-\ub370\uc774\ud130-\ud655\uc778"},"3.4 \ub370\uc774\ud130 \ud655\uc778"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"psql")," \ub85c Target DB \uc5d0 \uc811\uc18d\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ PGPASSWORD=targetpassword psql -h localhost -p 5433 -U targetuser -d targetdatabase\npsql (14.6, server 14.0 (Debian 14.0-1.pgdg110+1))\nType "help" for help.\n\ntargetdatabase=#\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select \ubb38\uc744 \uc791\uc131\ud558\uc5ec ",(0,r.kt)("inlineCode",{parentName:"p"},"iris_prediction")," \ud14c\uc774\ube14\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ub97c \ud655\uc778\ud569\ub2c8\ub2e4."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"targetdatabase=# SELECT * FROM iris_prediction LIMIT 100;\n id  |        timestamp        | iris_class \n-----+-------------------------+------------\n   1 | 2022-12-21 23:31:12.705 |          1\n   2 | 2022-12-21 23:31:13.804 |          2\n   3 | 2022-12-21 23:31:14.815 |          2\n   4 | 2022-12-21 23:31:15.828 |          2\n   5 | 2022-12-21 23:31:16.835 |          1\n   6 | 2022-12-21 23:31:17.848 |          1\n   7 | 2022-12-21 23:31:18.854 |          1\n   8 | 2022-12-21 23:31:19.863 |          0\n   9 | 2022-12-21 23:31:20.875 |          2\n")))))}g.isMDXComponent=!0},4875:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/stream-2-c98ecfc58f0b6b3a6941ef0300b8cf20.png"}}]);