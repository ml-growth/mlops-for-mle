"use strict";(self.webpackChunktemp=self.webpackChunktemp||[]).push([[1676],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>s});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var k=l.createContext({}),i=function(e){var t=l.useContext(k),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return l.createElement(k.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,k=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=i(n),s=a,N=m["".concat(k,".").concat(s)]||m[s]||p[s]||r;return n?l.createElement(N,o(o({ref:t},u),{},{components:n})):l.createElement(N,o({ref:t},u))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var c={};for(var k in t)hasOwnProperty.call(t,k)&&(c[k]=t[k]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var i=2;i<r;i++)o[i]=n[i];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1007:(e,t,n)=>{n.d(t,{Z:()=>s});var l=n(7294),a=n(6010);const r="browserWindow_my1Q",o="browserWindowHeader_jXSR",c="buttons_uHc7",k="browserWindowAddressBar_Pd8y",i="dot_giz1",u="browserWindowMenuIcon_Vhuh",p="bar_rrRL",m="browserWindowBody_Idgs";function s(e){let{children:t,minHeight:n,url:s="http://localhost:3000"}=e;return l.createElement("div",{className:r,style:{minHeight:n}},l.createElement("div",{className:o},l.createElement("div",{className:c},l.createElement("span",{className:i,style:{background:"#f25f58"}}),l.createElement("span",{className:i,style:{background:"#fbbe3c"}}),l.createElement("span",{className:i,style:{background:"#58cb42"}})),l.createElement("div",{className:(0,a.Z)(k,"text--truncate")},s),l.createElement("div",{className:u},l.createElement("div",null,l.createElement("span",{className:p}),l.createElement("span",{className:p}),l.createElement("span",{className:p})))),l.createElement("div",{className:m},t))}},2232:(e,t,n)=>{n.d(t,{Z:()=>o});var l=n(7294);const a="codeDescription_fg9D",r="codeDescriptionBody_Gp1s";function o(e){let{children:t,minHeight:n}=e;return l.createElement("div",{className:a,style:{minHeight:n}},l.createElement("div",{className:r},t))}},3691:(e,t,n)=>{n.d(t,{L:()=>a,W:()=>r});var l=n(7294);function a(e){let{children:t}=e;return l.createElement("span",{style:{backgroundColor:"#9747FF",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}function r(e){let{children:t}=e;return l.createElement("span",{style:{backgroundColor:"#6A77D7",borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)}},5345:(e,t,n)=>{n.d(t,{Z:()=>o});var l=n(7294);const a="PreviewDescription_enzD",r="PreviewDescriptionBody_t2U9";function o(e){let{children:t,minHeight:n}=e;return l.createElement("div",{className:a,style:{minHeight:n}},l.createElement("div",{className:r},t))}},3164:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>T,frontMatter:()=>u,metadata:()=>m,toc:()=>N});var l=n(7462),a=(n(7294),n(3905)),r=n(2232),o=n(5345),c=n(1007),k=n(3691);const i=n.p+"assets/images/kafka-13-f6d263fd1cc2c2a8800eb5484a41e972.png",u={sidebar_position:4,description:"\ud83d\udccc Docker Compose \ub97c \uc774\uc6a9\ud558\uc5ec Zookeeper, Broker, Schema Registry, Connect \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."},p="4) Kafka System",m={unversionedId:"kafka/kafka-system",id:"kafka/kafka-system",title:"4) Kafka System",description:"\ud83d\udccc Docker Compose \ub97c \uc774\uc6a9\ud558\uc5ec Zookeeper, Broker, Schema Registry, Connect \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.",source:"@site/docs/kafka/kafka-system.mdx",sourceDirName:"kafka",slug:"/kafka/kafka-system",permalink:"/tutorial/docs/kafka/kafka-system",draft:!1,editUrl:"https://github.com/mlops-for-mle/tutorial/tree/main/docs/kafka/kafka-system.mdx",tags:[],version:"current",lastUpdatedBy:"Jongseob Jeon",lastUpdatedAt:1687334404,formattedLastUpdatedAt:"Jun 21, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"\ud83d\udccc Docker Compose \ub97c \uc774\uc6a9\ud558\uc5ec Zookeeper, Broker, Schema Registry, Connect \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."},sidebar:"tutorialSidebar",previous:{title:"3) Connect & Connector",permalink:"/tutorial/docs/kafka/connect-connector"},next:{title:"5) Source Connector",permalink:"/tutorial/docs/kafka/source-connector"}},s={},N=[{value:"Chapter Preview",id:"chapter-preview",level:2},{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:3},{value:"\uc2a4\ud399 \uba85\uc138\uc11c",id:"\uc2a4\ud399-\uba85\uc138\uc11c",level:3},{value:"0. \ud658\uacbd \uc124\uc815",id:"0-\ud658\uacbd-\uc124\uc815",level:2},{value:"1. Architecture",id:"1-architecture",level:2},{value:"2. Kafka System",id:"2-kafka-system",level:2},{value:"2.1 Zookeeper &amp; Broker",id:"21-zookeeper--broker",level:3},{value:"2.2 Schema Registry",id:"22-schema-registry",level:3},{value:"2.3 Connect",id:"23-connect",level:3},{value:"2.4 <code>kafka-docker-compose.yaml</code>",id:"24-kafka-docker-composeyaml",level:3},{value:"3. \uc2e4\ud589 \ubc0f \ud655\uc778",id:"3-\uc2e4\ud589-\ubc0f-\ud655\uc778",level:2},{value:"3.1 \uc2e4\ud589",id:"31-\uc2e4\ud589",level:3},{value:"3.2 \uc11c\ube44\uc2a4 \ud655\uc778",id:"32-\uc11c\ube44\uc2a4-\ud655\uc778",level:3}],E={toc:N};function T(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},E,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"4-kafka-system"},"4) Kafka System"),(0,a.kt)(o.Z,{mdxType:"PreviewDescription"},(0,a.kt)("h2",{id:"chapter-preview"},"Chapter Preview"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Docker Compose \ub97c \uc774\uc6a9\ud558\uc5ec Zookeeper, Broker, Schema Registry, Connect \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.")),(0,a.kt)("h3",{id:"\uc2a4\ud399-\uba85\uc138\uc11c"},"\uc2a4\ud399 \uba85\uc138\uc11c"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Zookeeper, Broker, Schema Registry, Connect \ub97c \uc0dd\uc131\ud558\ub294 Docker Compose \ud30c\uc77c\uc744 \uc791\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Zookeeper"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Service name")," : ",(0,a.kt)("code",null,"zookeeper")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Image")," : ",(0,a.kt)("code",null,"confluentinc/cp-zookeeper:7.3.0")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Container name")," : ",(0,a.kt)("code",null,"zookeeper")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Port")," : ",(0,a.kt)("code",null,"2181:2181")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Environment"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"ZOOKEEPER_SERVER_ID")," : ",(0,a.kt)("code",null,"1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"ZOOKEEPER_CLIENT_PORT")," : ",(0,a.kt)("code",null,"2181")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Broker"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Service name")," : ",(0,a.kt)("code",null,"broker")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Image")," : ",(0,a.kt)("code",null,"confluentinc/cp-kafka:7.3.0")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Container name")," : ",(0,a.kt)("code",null,"broker")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Port")," : ",(0,a.kt)("code",null,"9092:9092")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Environment"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_BROKER_ID")," : ",(0,a.kt)("code",null,"1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_ZOOKEEPER_CONNECT")," : ",(0,a.kt)("code",null,"zookeeper:2181")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_ADVERTISED_LISTENERS")," : ",(0,a.kt)("code",null,"PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_LISTENER_SECURITY_PROTOCOL_MAP")," : ",(0,a.kt)("code",null,"PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_INTER_BROKER_LISTENER_NAME")," : ",(0,a.kt)("code",null,"PLAINTEXT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR")," : ",(0,a.kt)("code",null,"1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS")," : ",(0,a.kt)("code",null,"0")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Schema-registry"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Service name")," : ",(0,a.kt)("code",null,"schema-registry")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Image")," : ",(0,a.kt)("code",null,"confluentinc/cp-schema-registry:7.3.0")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Container name")," : ",(0,a.kt)("code",null,"schema-registry")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Port")," : ",(0,a.kt)("code",null,"8081:8081")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Environment"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"SCHEMA_REGISTRY_HOST_NAME")," : ",(0,a.kt)("code",null,"schema-registry")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS")," : ",(0,a.kt)("code",null,"broker:29092")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"SCHEMA_REGISTRY_LISTENERS")," : ",(0,a.kt)("code",null,"http://schema-registry:8081")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Connect"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Service name")," : ",(0,a.kt)("code",null,"connect")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Image")," : ",(0,a.kt)("code",null,"confluentinc/cp-connect:7.3.0")," \ub97c \uc774\uc6a9\ud55c Dockerfile",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Environment"),"- ",(0,a.kt)("var",null,"CONNECT_PLUGIN_PATH")," : ",(0,a.kt)("code",null,"\u201c/usr/share/java,/usr/share/confluent-hub-components\u201d")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Run"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"confluent-hub install --no-prompt snowflakeinc/snowflake-kafka-connector:1.5.5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"confluent-hub install --no-prompt confluentinc/kafka-connect-json-schema-converter:7.3.0")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Container name")," : ",(0,a.kt)("code",null,"connect")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Port")," : ",(0,a.kt)("code",null,"8083:8083")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"Environment"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_BOOTSTRAP_SERVERS")," : ",(0,a.kt)("code",null,"schema-registry")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_BOOTSTRAP_SERVERS")," : ",(0,a.kt)("code",null,"broker:29092")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_REST_ADVERTISED_HOST_NAME")," : ",(0,a.kt)("code",null,"connect")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_GROUP_ID")," : ",(0,a.kt)("code",null,"docker-connect-group")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_CONFIG_STORAGE_TOPIC")," : ",(0,a.kt)("code",null,"docker-connect-configs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR")," : ",(0,a.kt)("code",null,"1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_OFFSET_STORAGE_TOPIC")," : ",(0,a.kt)("code",null,"docker-connect-offsets")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR")," : ",(0,a.kt)("code",null,"1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_STATUS_STORAGE_TOPIC")," : ",(0,a.kt)("code",null,"docker-connect-status")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_STATUS_STORAGE_REPLICATION_FACTOR")," : ",(0,a.kt)("code",null,"1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_KEY_CONVERTER")," : ",(0,a.kt)("code",null,"org.apache.kafka.connect.storage.StringConverter")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_VALUE_CONVERTER")," : ",(0,a.kt)("code",null,"org.apache.kafka.connect.json.JsonConverter")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL")," : ",(0,a.kt)("code",null,"http://schema-registry:8081")))))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Docker Compose \ud30c\uc77c\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"docker ps")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec \uc798 \ub744\uc6cc\uc84c\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.")))),(0,a.kt)(c.Z,{url:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part7",mdxType:"BrowserWindow"},(0,a.kt)("p",null,"\ud574\ub2f9 \ud30c\ud2b8\uc758 \uc804\uccb4 \ucf54\ub4dc\ub294 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mlops-for-mle/mlops-for-mle/tree/main/part7"},"mlops-for-mle/part7/")," \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"part7\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n// highlight-next-line\n\u251c\u2500\u2500 connect.Dockerfile\n\u251c\u2500\u2500 create_table.py\n// highlight-next-line\n\u251c\u2500\u2500 kafka-docker-compose.yaml\n\u251c\u2500\u2500 naive-docker-compose.yaml\n\u251c\u2500\u2500 sink_connector.json\n\u251c\u2500\u2500 source_connector.json\n\u251c\u2500\u2500 target-docker-compose.yaml\n\u2514\u2500\u2500 target.Dockerfile\n"))),(0,a.kt)("h2",{id:"0-\ud658\uacbd-\uc124\uc815"},"0. \ud658\uacbd \uc124\uc815"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"\ud83d\udccc \uc774\ubc88 \ucc55\ud130\ub97c \uc9c4\ud589\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc704\ud574\uc11c \uc55e\uc11c ",(0,a.kt)(k.W,{mdxType:"Chapter"},"2) Producer & Consumer")," \ucc55\ud130\uc5d0\uc11c \uc2e4\ud589\ub41c Docker Compose \ub97c \uc885\ub8cc\ud574\uc57c \ud569\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\uc544\ub798 \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \uc885\ub8cc\ud569\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# terminal-command\ndocker compose -p part7-naive down -v\n")),(0,a.kt)("h2",{id:"1-architecture"},"1. Architecture"),(0,a.kt)("p",null,"[\uadf8\ub9bc 7-13]","\uc740 \uc774\ubc88 \uc2e4\uc2b5\uc5d0\uc11c \ub2e4\ub8f0 \uc11c\ube44\uc2a4\ub4e4\uc758 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc785\ub2c8\ub2e4."),(0,a.kt)("div",{style:{textAlign:"center"}},(0,a.kt)("img",{src:i,style:{scale:"70%"}}),"[\uadf8\ub9bc7-13] Kafka System"),(0,a.kt)("p",null,"\uac01\uac01\uc758 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Zookeeper : \ube0c\ub85c\ucee4 \uc11c\ubc84\uc758 \uc0c1\ud0dc \uac10\uc9c0\ub97c \uc704\ud574 \uc0ac\uc6a9\ub418\ub294 \uc8fc\ud0a4\ud37c \uc11c\ubc84\uc785\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"Broker : Source Connector \uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubc1b\uc544 \ud1a0\ud53d\uc5d0 \uc800\uc7a5\ud558\uace0, Sink Connector \ub85c \ub370\uc774\ud130\ub97c \ub118\uaca8\uc904 \ube0c\ub85c\ucee4 \uc11c\ubc84\uc785\ub2c8\ub2e4. \uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 \ub2e4\uc911 \ube0c\ub85c\ucee4\uac00 \uc544\ub2cc \ub2e8\uc77c \ube0c\ub85c\ucee4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"Schema Registry : \uba54\uc2dc\uc9c0\uc758 schema \ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud55c Schema Registry \uc11c\ubc84\uc785\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"Connect : Connector \ub97c \ub744\uc6b0\uae30 \uc704\ud55c Connect \uc11c\ubc84\uc785\ub2c8\ub2e4.")),(0,a.kt)("p",null,"\uc774\uc81c \uc11c\ube44\uc2a4\ub97c \ud558\ub098\uc529 \uad6c\uccb4\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"2-kafka-system"},"2. Kafka System"),(0,a.kt)("h3",{id:"21-zookeeper--broker"},"2.1 Zookeeper & Broker"),(0,a.kt)("p",null,"\uc8fc\ud0a4\ud37c\uc640 \ube0c\ub85c\ucee4\ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\ub294 ",(0,a.kt)(k.W,{mdxType:"Chapter"},"2) Producer & Consumer")," \ucc55\ud130\uc5d0\uc11c \uc791\uc131\ud55c \ub0b4\uc6a9\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kafka-docker-compose.yaml"',title:'"kafka-docker-compose.yaml"'},'version: "3"\n\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:7.3.0\n    container_name: zookeeper\n    ports:\n      - 2181:2181\n    environment:\n      ZOOKEEPER_SERVER_ID: 1\n      ZOOKEEPER_CLIENT_PORT: 2181\n  broker:\n    image: confluentinc/cp-kafka:7.3.0\n    container_name: broker\n    depends_on:\n      - zookeeper\n    ports:\n      - 9092:9092\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n')),(0,a.kt)("h3",{id:"22-schema-registry"},"2.2 Schema Registry"),(0,a.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c Schema Registry \ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)(r.Z,{mdxType:"CodeDescription"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kafka-docker-compose.yaml"',title:'"kafka-docker-compose.yaml"'},'version: "3"\n\nservices:\n  schema-registry:\n    image: confluentinc/cp-schema-registry:7.3.0\n    container_name: schema-registry\n    depends_on:\n      - broker\n    ports:\n      - 8081:8081\n    environment:\n      SCHEMA_REGISTRY_HOST_NAME: schema-registry\n      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092\n      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"image")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Schema Registry \uc758 \uc774\ubbf8\uc9c0\ub85c ",(0,a.kt)("code",null,"confluentinc/cp-schema-registry:7.3.0")," \ub97c \uc774\uc6a9\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"container_name")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\ucee8\ud14c\uc774\ub108\uc758 \uc774\ub984\uc740 ",(0,a.kt)("code",null,"schema-registry")," \ub85c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"depends_on")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"broker")," \uac00 \uba3c\uc800 \uc2e4\ud589\ub41c \ud6c4 Schema Registry \uac00 \uc2e4\ud589\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"ports")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Schema Registry \uc758 \ud3ec\ud2b8\uc778 ",(0,a.kt)("code",null,"8081:8081")," \uc744 \ud3ec\ud2b8 \ud3ec\uc6cc\ub529\ud569\ub2c8\ub2e4.")))),(0,a.kt)("p",null,"Schema Registry \uc758 \ud658\uacbd \ubcc0\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)(r.Z,{mdxType:"CodeDescription"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"SCHEMA_REGISTRY_HOST_NAME"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Schema Registry \uc758 \ud638\uc2a4\ud2b8 \uc774\ub984\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,a.kt)("code",null,"schema-registry")," \ub85c \uc9c0\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Bootstrap \uc73c\ub85c \ub744\uc6cc\uc9c4 \ube0c\ub85c\ucee4 \uc11c\ubc84\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c ",(0,a.kt)("code",null,"\ube0c\ub85c\ucee4 \uc11c\ube44\uc2a4 \uc774\ub984 : \ube0c\ub85c\ucee4 \uc11c\ube44\uc2a4 \ub0b4\ubd80 \ud3ec\ud2b8")," \ud615\uc2dd\uc73c\ub85c \uc791\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,a.kt)("code",null,"broker:29092")," \uc744 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"SCHEMA_REGISTRY_LISTENERS"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\uc678\ubd80\uc5d0\uc11c \uc811\uc18d\ud560 \ub9ac\uc2a4\ub108\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 ",(0,a.kt)("code",null,"http://schema-registry:8081")," \uc73c\ub85c \uc124\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4.")))))),(0,a.kt)("h3",{id:"23-connect"},"2.3 Connect"),(0,a.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c Connect \ub97c \uc0dd\uc131\ud558\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,"Connect \uc758 \uacbd\uc6b0 \uc774\ubbf8\uc9c0\ub97c build \ud558\uae30 \uc704\ud55c Dockerfile \uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\nDockerfile \uc740 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)(r.Z,{mdxType:"CodeDescription"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="connect.Dockerfile"',title:'"connect.Dockerfile"'},'# connect.Dockerfile\nFROM confluentinc/cp-kafka-connect:7.3.0\n\nENV CONNECT_PLUGIN_PATH="/usr/share/java,/usr/share/confluent-hub-components"\n\nRUN confluent-hub install --no-prompt snowflakeinc/snowflake-kafka-connector:1.5.5 &&\\\n  confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2 &&\\\n  confluent-hub install --no-prompt confluentinc/kafka-connect-json-schema-converter:7.3.0\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"FROM")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Base \uc774\ubbf8\uc9c0\ub85c ",(0,a.kt)("code",null,"confluentinc/cp-kafka-connect:7.3.0")," \uc744 \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"ENV")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connect \uc5d0\uc11c\ub294 \ud50c\ub7ec\uadf8\uc778\uc758 path \ub97c \uc124\uc815\ud574\uc90d\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 base \uc774\ubbf8\uc9c0\uc5d0 \uc788\ub294 ",(0,a.kt)("code",null,"/usr/share/java")," path \uc640 ",(0,a.kt)("code",null,"/usr/share/confluent-hub-components")," path \ub97c \ud50c\ub7ec\uadf8\uc778 path \ub85c \uc124\uc815\ud569\ub2c8\ub2e4. "),(0,a.kt)("li",{parentName:"ul"},"\ud569\uccd0\uc11c ",(0,a.kt)("code",null,"/usr/share/java,/usr/share/confluent-hub-components")," \ud50c\ub7ec\uadf8\uc778 path \ub85c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"RUN")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 JDBC Connector \ub97c \uc0ac\uc6a9\ud560 \uac83\uc774\uba70, PostgreSQL DB \uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud55c Connector \ub97c \uc124\uce58\ud574\uc57c\ud569\ub2c8\ub2e4. ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"confluent-hub install --no-prompt snowflakeinc/snowflake-kafka-connector:1.5.5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.2")))),(0,a.kt)("li",{parentName:"ul"},"\ub610\ud55c value schema \uc758 Converter \ub294 Json Schema Converter \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("code",null,"confluent-hub install --no-prompt confluentinc/kafka-connect-json-schema-converter:7.3.0")))))))),(0,a.kt)("p",null,"\uc55e\uc11c \uc791\uc131\ud55c Dockerfile \uc744 \uc774\uc6a9\ud55c Connect \uc758 \ucf54\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)(r.Z,{mdxType:"CodeDescription"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kafka-docker-compose.yaml"',title:'"kafka-docker-compose.yaml"'},'version: "3"\n\nservices:  \n  connect:\n    build:\n      context: .\n      dockerfile: connect.Dockerfile\n    container_name: connect\n    depends_on:\n      - broker\n      - schema-registry\n    ports:\n      - 8083:8083\n    environment:\n      CONNECT_BOOTSTRAP_SERVERS: broker:29092\n      CONNECT_REST_ADVERTISED_HOST_NAME: connect\n      CONNECT_GROUP_ID: docker-connect-group\n      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs\n      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets\n      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status\n      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter\n      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter\n      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"build")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Dockerfile \uc744 build \ud558\uae30 \uc704\ud55c \uacbd\ub85c\ub85c ",(0,a.kt)("code",null,".")," \uc744 \uc785\ub825\ud558\uace0, Dockerfile \ud30c\uc77c\uba85\uc778 ",(0,a.kt)("code",null,"connect.Dockerfile")," \uc744 \uc785\ub825\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"container_name")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\ucee8\ud14c\uc774\ub108 \uc774\ub984\uc740 ",(0,a.kt)("code",null,"connect")," \ub85c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"depends_on")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\ube0c\ub85c\ucee4\uc640 Schema Registry \uac00 \uba3c\uc800 \uc2e4\ud589\ub41c \ub2e4\uc74c\uc5d0 Connect \uac00 \uc2e4\ud589\ub418\uc57c \ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"ports")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connect \uc758 \ud3ec\ud2b8\uc778 ",(0,a.kt)("code",null,"8083:8083")," \ub97c \ud3ec\ud2b8 \ud3ec\uc6cc\ub529\ud569\ub2c8\ub2e4.")))),(0,a.kt)("p",null,"Connect \uc758 \ud658\uacbd \ubcc0\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)(r.Z,{mdxType:"CodeDescription"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_BOOTSTRAP_SERVERS"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Bootstrap \uc73c\ub85c \ub744\uc6cc\uc9c4 \ube0c\ub85c\ucee4 \uc11c\ubc84\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c ",(0,a.kt)("code",null,"\ube0c\ub85c\ucee4 \uc11c\ube44\uc2a4 \uc774\ub984 : \ube0c\ub85c\ucee4 \uc11c\ube44\uc2a4 \ub0b4\ubd80 \ud3ec\ud2b8")," \ud615\uc2dd\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_REST_ADVERTISED_HOST_NAME"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connect \uc5d0\uc11c\ub294 REST API \uc694\uccad\uc5d0 \ub300\ud55c \ucc98\ub9ac\uc640 Connector \uc758 \ub4f1\ub85d, \uc124\uc815, \uc2dc\uc791, \uc885\ub8cc \ub4f1\uc758 \ucc98\ub9ac\ub97c \ub2f4\ub2f9\ud558\ub294 Worker \uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"Worker \uac04\uc758 \uc5f0\uacb0\uc774 \uac00\ub2a5\ud558\ub3c4\ub85d \ud638\uc2a4\ud2b8 \uc774\ub984\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_GROUP_ID"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connect \uc758 Worker \ud504\ub85c\uc138\uc2a4 \uadf8\ub8f9 (\ub610\ub294 \ud074\ub7ec\uc2a4\ud130)\ub97c \uad6c\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \uace0\uc720\ud55c ID \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ub2e8, Consumer \uadf8\ub8f9 ID \uc640 \ucda9\ub3cc\ud558\uba74 \uc548\ub429\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_CONFIG_STORAGE_TOPIC"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connector \uc758 \ud658\uacbd \uc124\uc815\uc744 \uc800\uc7a5\ud560 \ube0c\ub85c\ucee4\uc758 \ud1a0\ud53d \uc774\ub984\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\ud658\uacbd \uc124\uc815\uc744 \uc800\uc7a5\ud558\ub294 \ud1a0\ud53d\uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 Replication Factor \uc758 \uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_OFFSET_STORAGE_TOPIC"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connector \uc758 offset \uc744 \uc800\uc7a5\ud560 \ube0c\ub85c\ucee4\uc758 \ud1a0\ud53d \uc774\ub984\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Offset \uc744 \uc800\uc7a5\ud558\ub294 \ud1a0\ud53d\uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 Replication Factor \uc758 \uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_STATUS_STORAGE_TOPIC"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Connector \uc640 task \uc758 \uc0c1\ud0dc\ub97c \uc800\uc7a5\ud560 \ube0c\ub85c\ucee4\uc758 \ud1a0\ud53d \uc774\ub984\uc744 \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_STATUS_STORAGE_REPLICATION_FACTOR"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\uc0c1\ud0dc\ub97c \uc800\uc7a5\ud558\ub294 \ud1a0\ud53d\uc744 \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 Replication Factor \uc758 \uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_KEY_CONVERTER"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Key \uc5d0 \ub300\ud55c Converter \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 String Converter \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_VALUE_CONVERTER"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Value \uc5d0 \ub300\ud55c Converter \ub97c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 Json Converter \ub97c \uc0ac\uc6a9\ud558\uaca0\uc2b5\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Value Converter \uc5d0 \ub300\ud55c Schema Registry URL \uc744 \uc124\uc815\ud569\ub2c8\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc774\ubc88 \ucc55\ud130\uc5d0\uc11c\ub294 Schema Registry \uc758 \uc11c\ube44\uc2a4 \uc774\ub984\uacfc \ud3ec\ud2b8\uc778 ",(0,a.kt)("code",null,"http://schema-registry:8081")," \uc744 \uae30\uc785\ud574\uc90d\ub2c8\ub2e4.")))))),(0,a.kt)("h3",{id:"24-kafka-docker-composeyaml"},"2.4 ",(0,a.kt)("inlineCode",{parentName:"h3"},"kafka-docker-compose.yaml")),(0,a.kt)("p",null,"\ubaa8\ub4e0 \uc11c\ube44\uc2a4\ub97c \ub744\uc6b0\ub294 \ucf54\ub4dc\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'# kafka-docker-compose.yaml\nversion: "3"\n\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:7.3.0\n    container_name: zookeeper\n    ports:\n      - 2181:2181\n    environment:\n      ZOOKEEPER_SERVER_ID: 1\n      ZOOKEEPER_CLIENT_PORT: 2181\n\n  broker:\n    image: confluentinc/cp-kafka:7.3.0\n    container_name: broker\n    depends_on:\n      - zookeeper\n    ports:\n      - 9092:9092\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n\n  schema-registry:\n    image: confluentinc/cp-schema-registry:7.3.0\n    container_name: schema-registry\n    depends_on:\n      - broker\n    ports:\n      - 8081:8081\n    environment:\n      SCHEMA_REGISTRY_HOST_NAME: schema-registry\n      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092\n      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081\n\n  connect:\n    build:\n      context: .\n      dockerfile: connect.Dockerfile\n    container_name: connect\n    depends_on:\n      - broker\n      - schema-registry\n    ports:\n      - 8083:8083\n    environment:\n      CONNECT_BOOTSTRAP_SERVERS: broker:29092\n      CONNECT_REST_ADVERTISED_HOST_NAME: connect\n      CONNECT_GROUP_ID: docker-connect-group\n      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs\n      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets\n      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status\n      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1\n      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter\n      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter\n      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081\n\nnetworks:\n  default:\n    name: mlops-network\n    external: true\n')),(0,a.kt)("h2",{id:"3-\uc2e4\ud589-\ubc0f-\ud655\uc778"},"3. \uc2e4\ud589 \ubc0f \ud655\uc778"),(0,a.kt)("h3",{id:"31-\uc2e4\ud589"},"3.1 \uc2e4\ud589"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker compose")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec \uc704\uc5d0\uc11c \uc791\uc131\ud55c \uc11c\ube44\uc2a4\ub4e4\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)(r.Z,{mdxType:"CodeDescription"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# terminal-command\ndocker compose -p part7-kafka -f kafka-docker-compose.yaml up -d\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"-p")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Project name \uc740 ",(0,a.kt)("code",null,"part7-kafka")," \ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("var",null,"-f")," :",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"File name \uc740 \uc704\uc5d0\uc11c \uc791\uc131\ud55c \ud30c\uc77c \uc774\ub984\uc778 ",(0,a.kt)("code",null,"kafka-docker-compose.yaml")," \uc744 \uc801\uc5b4\uc90d\ub2c8\ub2e4."))))),(0,a.kt)("h3",{id:"32-\uc11c\ube44\uc2a4-\ud655\uc778"},"3.2 \uc11c\ube44\uc2a4 \ud655\uc778"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker ps")," \uba85\ub839\uc5b4\ub97c \uc774\uc6a9\ud558\uc5ec \uc11c\ube44\uc2a4\ub4e4\uc774 \uc798 \ub744\uc6cc\uc84c\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# terminal-command\ndocker ps\nCONTAINER ID   IMAGE                                   COMMAND                  CREATED          STATUS                             PORTS                                        NAMES\n2fe161195b13   part7-kafka-connect                       "/etc/confluent/dock\u2026"   41 seconds ago   Up 39 seconds (health: starting)   0.0.0.0:8083->8083/tcp, 9092/tcp             connect\n4b98228b7e77   confluentinc/cp-schema-registry:7.3.0   "/etc/confluent/dock\u2026"   41 seconds ago   Up 39 seconds                      0.0.0.0:8081->8081/tcp                       schema-registry\n505d3a4d6fdb   confluentinc/cp-kafka:7.3.0             "/etc/confluent/dock\u2026"   41 seconds ago   Up 40 seconds                      0.0.0.0:9092->9092/tcp                       broker\n7f4a6f51837c   confluentinc/cp-zookeeper:7.3.0         "/etc/confluent/dock\u2026"   42 seconds ago   Up 40 seconds                      2888/tcp, 0.0.0.0:2181->2181/tcp, 3888/tcp   zookeeper\n')))}T.isMDXComponent=!0}}]);